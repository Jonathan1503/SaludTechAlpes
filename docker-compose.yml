# Remove the version field as it's not needed for modern Docker Compose
networks:
  pulsar:
    driver: bridge
  api:
    driver: bridge

services:
  # Apache Pulsar Services
  zookeeper:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    networks:
      - pulsar
    command: bin/pulsar initialize-cluster-metadata --cluster cluster-a --zookeeper zookeeper:2181 --configuration-store zookeeper:2181 --web-service-url http://broker:8080 --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

  bookie:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf && exec bin/pulsar bookie"

  broker:
    image: apachepulsar/pulsar:latest
    profiles: ["pulsar"]
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf && exec bin/pulsar broker"

  # PostgreSQL Database
  db:
    image: postgres:15
    profiles: ["pulsar", "saludtech"]
    networks:
      - pulsar
      - api
    hostname: db
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql

  # SaludTech Services
  ingestion:
    container_name: ingestion
    hostname: ingestion
    image: ingestion/flask
    profiles: ["saludtech"]
    networks:
      - api
      - pulsar
    labels:
      SidecarDiscover: "false"
    environment:
      - INGESTION_ADDRESS=ingestion
      - PULSAR_ADDRESS=broker
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:postgres@db:5432/ingestion
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_started
      broker:
        condition: service_started

  anonimizacion:
    container_name: anonimizacion
    hostname: anonimizacion
    image: anonimizacion/flask
    profiles: ["saludtech"]
    networks:
      - api
      - pulsar
    labels:
      SidecarDiscover: "false"
    environment:
      - ANONIMIZACION_ADDRESS=anonimizacion
      - PULSAR_ADDRESS=broker
      - SQLALCHEMY_DATABASE_URI=postgresql://postgres:postgres@db:5432/anonimizacion
      - BROKER_HOST=broker

    ports:
      - "5001:5000"

volumes:
  pg_data: